{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nimport AgoraRTC__default from 'agora-rtc-sdk-ng';\nexport * from 'agora-rtc-sdk-ng';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar createClient = function createClient(config) {\n  var client;\n\n  function createClosure() {\n    if (!client) {\n      client = AgoraRTC__default.createClient(config);\n    }\n\n    return client;\n  }\n\n  return function () {\n    return createClosure();\n  };\n};\n\nfunction createMicrophoneAndCameraTracks(audioConfig, videoConfig) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createMicrophoneAndCameraTracks(audioConfig, videoConfig)).then(function (_AgoraRTC$createMicro) {\n        tracks = _AgoraRTC$createMicro;\n        return tracks;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var tracks = null;\n  return function useMicrophoneAndCameraTracks() {\n    var _useState = useState(false),\n        ready = _useState[0],\n        setReady = _useState[1];\n\n    var ref = useRef(tracks);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (tracks) {\n          ref.current = tracks;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        tracks = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      tracks: ref.current\n    };\n  };\n}\n\nfunction createBufferSourceAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createBufferSourceAudioTrack(config)).then(function (_AgoraRTC$createBuffe) {\n        track = _AgoraRTC$createBuffe;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useBufferSourceAudioTrack() {\n    var _useState2 = useState(false),\n        ready = _useState2[0],\n        setReady = _useState2[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current\n    };\n  };\n}\n\nfunction createCameraVideoTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCameraVideoTrack(config)).then(function (_AgoraRTC$createCamer) {\n        track = _AgoraRTC$createCamer;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useCameraVideoTrack() {\n    var _useState3 = useState(false),\n        ready = _useState3[0],\n        setReady = _useState3[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current\n    };\n  };\n}\n\nfunction createCustomAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCustomAudioTrack(config)).then(function (_AgoraRTC$createCusto) {\n        track = _AgoraRTC$createCusto;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useCustomAudioTrack() {\n    var _useState4 = useState(false),\n        ready = _useState4[0],\n        setReady = _useState4[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current\n    };\n  };\n}\n\nfunction createCustomVideoTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCustomVideoTrack(config)).then(function (_AgoraRTC$createCusto2) {\n        track = _AgoraRTC$createCusto2;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useCustomVideoTrack() {\n    var _useState5 = useState(false),\n        ready = _useState5[0],\n        setReady = _useState5[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current\n    };\n  };\n}\n\nfunction createMicrophoneAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createMicrophoneAudioTrack(config)).then(function (_AgoraRTC$createMicro2) {\n        track = _AgoraRTC$createMicro2;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useMicrophoneAudioTrack() {\n    var _useState6 = useState(false),\n        ready = _useState6[0],\n        setReady = _useState6[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current\n    };\n  };\n}\n\nfunction createScreenVideoTrack(config, withAudio) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createScreenVideoTrack(config, withAudio)).then(function (_AgoraRTC$createScree) {\n        tracks = _AgoraRTC$createScree;\n        return tracks;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var tracks;\n  return function useScreenVideoTrack() {\n    var _useState7 = useState(false),\n        ready = _useState7[0],\n        setReady = _useState7[1];\n\n    var ref = useRef(tracks);\n    useEffect(function () {\n      if (ref.current === undefined) {\n        createClosure().then(function (tracks) {\n          ref.current = tracks;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n    }, []);\n    return {\n      ready: ready,\n      tracks: ref.current\n    };\n  };\n}\n\nvar AgoraVideoPlayer = function AgoraVideoPlayer(props) {\n  var vidDiv = useRef(null);\n\n  var videoTrack = props.videoTrack,\n      other = _objectWithoutPropertiesLoose(props, [\"videoTrack\"]);\n\n  useEffect(function () {\n    if (vidDiv.current !== null) videoTrack.play(vidDiv.current);\n    return function () {\n      videoTrack.stop();\n    };\n  }, [videoTrack]);\n  return React.createElement(\"div\", Object.assign({}, other, {\n    ref: vidDiv\n  }));\n};\n\nexport default AgoraRTC__default;\nexport { AgoraVideoPlayer, createBufferSourceAudioTrack, createCameraVideoTrack, createClient, createCustomAudioTrack, createCustomVideoTrack, createMicrophoneAndCameraTracks, createMicrophoneAudioTrack, createScreenVideoTrack };","map":{"version":3,"sources":["../src/index.tsx"],"names":["createClient","client","AgoraRTC","createClosure","createMicrophoneAndCameraTracks","audioConfig","videoConfig","tracks","ready","setReady","useState","ref","useRef","useEffect","current","createBufferSourceAudioTrack","config","track","createCameraVideoTrack","createCustomAudioTrack","createCustomVideoTrack","createMicrophoneAudioTrack","createScreenVideoTrack","withAudio","AgoraVideoPlayer","vidDiv","videoTrack","other","props"],"mappings":"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","sourcesContent":["import React, { RefObject, useEffect, useRef, useState } from 'react'\r\nimport AgoraRTC, {\r\n  BufferSourceAudioTrackInitConfig,\r\n  CameraVideoTrackInitConfig,\r\n  ClientConfig,\r\n  CustomAudioTrackInitConfig,\r\n  CustomVideoTrackInitConfig,\r\n  IAgoraRTCClient,\r\n  IBufferSourceAudioTrack,\r\n  ICameraVideoTrack,\r\n  ILocalAudioTrack,\r\n  ILocalVideoTrack,\r\n  IMicrophoneAudioTrack,\r\n  IRemoteVideoTrack,\r\n  MicrophoneAudioTrackInitConfig,\r\n  ScreenVideoTrackInitConfig\r\n} from 'agora-rtc-sdk-ng'\r\n\r\nexport default AgoraRTC;\r\nexport * from 'agora-rtc-sdk-ng';\r\n\r\nexport const createClient = (config: ClientConfig) => {\r\n  let client: IAgoraRTCClient\r\n  function createClosure() {\r\n    if (!client) {\r\n      client = AgoraRTC.createClient(config)\r\n    }\r\n    return client\r\n  }\r\n  return () => createClosure()\r\n}\r\n\r\nexport function createMicrophoneAndCameraTracks(\r\n  audioConfig?: MicrophoneAudioTrackInitConfig | undefined,\r\n  videoConfig?: CameraVideoTrackInitConfig | undefined\r\n) {\r\n  let tracks: [IMicrophoneAudioTrack, ICameraVideoTrack] | null = null\r\n  async function createClosure() {\r\n    tracks = await AgoraRTC.createMicrophoneAndCameraTracks(\r\n      audioConfig,\r\n      videoConfig\r\n    )\r\n    return tracks\r\n  }\r\n  return function useMicrophoneAndCameraTracks() {\r\n    const [ready, setReady] = useState(false)\r\n    const ref = useRef(tracks)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === null) {\r\n        createClosure().then((tracks) => {\r\n          ref.current = tracks\r\n          setReady(true)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n      return () => {\r\n        tracks = null\r\n      }\r\n    }, [])\r\n    return { ready, tracks: ref.current }\r\n  }\r\n}\r\n\r\nexport function createBufferSourceAudioTrack(\r\n  config: BufferSourceAudioTrackInitConfig\r\n) {\r\n  let track: IBufferSourceAudioTrack | null = null\r\n  async function createClosure() {\r\n    track = await AgoraRTC.createBufferSourceAudioTrack(config)\r\n    return track\r\n  }\r\n  return function useBufferSourceAudioTrack() {\r\n    const [ready, setReady] = useState(false)\r\n    const ref = useRef(track)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === null) {\r\n        createClosure().then((track) => {\r\n          ref.current = track\r\n          setReady(true)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n      return () => {\r\n        track = null\r\n      }\r\n    }, [])\r\n    return { ready, track: ref.current }\r\n  }\r\n}\r\n\r\nexport function createCameraVideoTrack(config?: CameraVideoTrackInitConfig) {\r\n  let track: ICameraVideoTrack | null = null\r\n  async function createClosure() {\r\n    track = await AgoraRTC.createCameraVideoTrack(config)\r\n    return track\r\n  }\r\n  return function useCameraVideoTrack() {\r\n    const [ready, setReady] = useState(false)\r\n    const ref = useRef(track)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === null) {\r\n        createClosure().then((track) => {\r\n          ref.current = track\r\n          setReady(true)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n      return () => {\r\n        track = null\r\n      }\r\n    }, [])\r\n    return { ready, track: ref.current }\r\n  }\r\n}\r\n\r\nexport function createCustomAudioTrack(config: CustomAudioTrackInitConfig) {\r\n  let track: ILocalAudioTrack | null = null\r\n  async function createClosure() {\r\n    track = await AgoraRTC.createCustomAudioTrack(config)\r\n    return track\r\n  }\r\n  return function useCustomAudioTrack() {\r\n    const [ready, setReady] = useState(false)\r\n    const ref = useRef(track)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === null) {\r\n        createClosure().then((track) => {\r\n          ref.current = track\r\n          setReady(true)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n      return () => {\r\n        track = null\r\n      }\r\n    }, [])\r\n    return { ready, track: ref.current }\r\n  }\r\n}\r\n\r\nexport function createCustomVideoTrack(config: CustomVideoTrackInitConfig) {\r\n  let track: ILocalVideoTrack | null = null\r\n  async function createClosure() {\r\n    track = await AgoraRTC.createCustomVideoTrack(config)\r\n    return track\r\n  }\r\n  return function useCustomVideoTrack() {\r\n    const [ready, setReady] = useState(false)\r\n    const ref = useRef(track)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === null) {\r\n        createClosure().then((track) => {\r\n          ref.current = track\r\n          setReady(true)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n      return () => {\r\n        track = null\r\n      }\r\n    }, [])\r\n    return { ready, track: ref.current }\r\n  }\r\n}\r\n\r\nexport function createMicrophoneAudioTrack(\r\n  config?: MicrophoneAudioTrackInitConfig\r\n) {\r\n  let track: IMicrophoneAudioTrack | null = null\r\n  async function createClosure() {\r\n    track = await AgoraRTC.createMicrophoneAudioTrack(config)\r\n    return track\r\n  }\r\n  return function useMicrophoneAudioTrack() {\r\n    const [ready, setReady] = useState(false)\r\n    const ref = useRef(track)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === null) {\r\n        createClosure().then((track) => {\r\n          ref.current = track\r\n          setReady(true)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n      return () => {\r\n        track = null\r\n      }\r\n    }, [])\r\n    return { ready, track: ref.current }\r\n  }\r\n}\r\n\r\nexport function createScreenVideoTrack(\r\n  config: ScreenVideoTrackInitConfig,\r\n  withAudio?: 'enable' | 'disable' | 'auto'\r\n) {\r\n  let tracks: [ILocalVideoTrack, ILocalAudioTrack] | ILocalVideoTrack\r\n  async function createClosure() {\r\n    tracks = await AgoraRTC.createScreenVideoTrack(config, withAudio)\r\n    return tracks\r\n  }\r\n  return function useScreenVideoTrack() {\r\n    const [ready, setReady] = useState(false)\r\n    const ref = useRef(tracks)\r\n\r\n    useEffect(() => {\r\n      if (ref.current === undefined) {\r\n        createClosure().then((tracks) => {\r\n          ref.current = tracks\r\n          setReady(true)\r\n        })\r\n      } else {\r\n        setReady(true)\r\n      }\r\n    }, [])\r\n    return { ready, tracks: ref.current }\r\n  }\r\n}\r\n\r\n\r\nexport const AgoraVideoPlayer = (props: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & { videoTrack: ILocalVideoTrack | IRemoteVideoTrack | ICameraVideoTrack }) => {\r\n  const vidDiv: RefObject<HTMLDivElement> = useRef(null)\r\n  const { videoTrack, ...other } = props;\r\n  useEffect(() => {\r\n    if (vidDiv.current !== null) videoTrack.play(vidDiv.current)\r\n    return () => {\r\n      videoTrack.stop()\r\n    }\r\n  }, [videoTrack])\r\n\r\n  return <div {...other} ref={vidDiv} />\r\n}\r\n"]},"metadata":{},"sourceType":"module"}