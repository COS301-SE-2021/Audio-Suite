{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\MEGA Drive\\\\Uni\\\\Third Year\\\\COS301\\\\Capstone\\\\Code\\\\Github\\\\Audio-Suite\\\\frontend\\\\src\\\\components\\\\FormModal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormModal = ({\n  show,\n  onHide,\n  type,\n  jwt,\n  currentOfficeInviteCode,\n  setResponseModalShow,\n  setResponseModalTitle,\n  setResponseModalMessage,\n  updateUserOfficeList\n}) => {\n  _s();\n\n  const [newOfficeName, setNewOfficeName] = useState('');\n  const [newOfficeInvite, setNewOfficeInvite] = useState('');\n  const [newSendOfficeInvite, setNewSendOfficeInvite] = useState('');\n  const [newSendOfficeInviteName, setNewSendOfficeInviteName] = useState('');\n  const [ResponseError, setResponseError] = useState('');\n\n  const createOffice = async () => {\n    if (newOfficeName !== '') {\n      const createOffice_requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newOfficeName,\n          jwt: jwt\n        })\n      };\n      fetch(\"http://localhost:3001/api/office/register\", createOffice_requestOptions).then(res => res.json()).then(result => {\n        if (result.Response === 'Success') {\n          onHide();\n          updateUserOfficeList();\n          setResponseModalShow(true);\n          setResponseModalTitle(\"Success\");\n          setResponseModalMessage(\"New office \" + newOfficeName + \" sucessfully registered.\");\n          setNewOfficeName('');\n        } else {\n          setResponseError(\"An office with that name already exists, Please choose a new name.\");\n          setNewOfficeName('');\n        } //console.log(\"User registered successfully.\");\n\n      });\n    } else {\n      setResponseError(\"Office name is required, Please don't leave in blank.\");\n    }\n  };\n\n  const joinOffice = async () => {\n    if (newOfficeInvite !== '') {\n      const joinOffice_requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          invite: newOfficeInvite,\n          jwt: jwt\n        })\n      };\n      fetch(\"http://localhost:3001/api/office/joinInvite\", joinOffice_requestOptions).then(res => res.json()).then(result => {\n        if (result.status === 'Success') {\n          onHide();\n          setResponseModalShow(true);\n          setResponseModalTitle(\"Success\");\n          setResponseModalMessage(\"You have successfully joined the office.\");\n          setNewOfficeName('');\n        } else {\n          console.log(result);\n          setResponseError(\"You are already in the office the invite link corresponds to.\");\n          setNewOfficeName('');\n        } //console.log(\"User registered successfully.\");\n\n      });\n    } else {\n      setResponseError(\"Office invite code is required, Please don't leave it blank.\");\n    }\n  };\n\n  const sendInvite = async () => {\n    if (newSendOfficeInvite !== '' && newSendOfficeInviteName !== '') {\n      const sendInvite_requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          emailAddress: newSendOfficeInvite,\n          name: newSendOfficeInviteName,\n          inviteCode: currentOfficeInviteCode\n        })\n      };\n      fetch(\"http://localhost:3001/api/notifications/sendInviteCode\", sendInvite_requestOptions).then(res => res.json()).then(result => {\n        if (result.Response === 'Success') {\n          onHide();\n          setResponseModalShow(true);\n          setResponseModalTitle(\"Success\");\n          setResponseModalMessage(\"You have successfully sent the invite code.\");\n          setNewSendOfficeInvite('');\n          setNewSendOfficeInviteName('');\n        } else {\n          setResponseError(\"Invite code could not be sent, Please try again.\");\n          setNewSendOfficeInvite('');\n          setNewSendOfficeInviteName('');\n        } //console.log(\"User registered successfully.\");\n\n      });\n    } else {\n      setResponseError(\"The name and email of the person to send to is required, Please don't leave them blank.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: [type === 'createOffice' && 'Create a new office', type === 'joinOffice' && 'Join a new office', type === 'sendInvite' && 'Send Office invite']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [type === 'createOffice' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [ResponseError !== '' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: ResponseError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicOfficeName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Office Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Office Name\",\n              value: newOfficeName,\n              onChange: event => setNewOfficeName(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true), type === 'joinOffice' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [ResponseError !== '' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: ResponseError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicOfficeInvite\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Office Invite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"OfficeInvite\",\n              value: newOfficeInvite,\n              onChange: event => setNewOfficeInvite(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true), type === 'sendInvite' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [ResponseError !== '' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: ResponseError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name of person the invite should be sent to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Name\",\n              value: newSendOfficeInviteName,\n              onChange: event => setNewSendOfficeInviteName(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicSendInvite\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email of person the invite should be sent to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Email\",\n              value: newSendOfficeInvite,\n              onChange: event => setNewSendOfficeInvite(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [type === 'createOffice' && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: async () => createOffice(),\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), type === 'joinOffice' && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: async () => joinOffice(),\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), type === 'sendInvite' && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: async () => sendInvite(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormModal, \"fhxcOjDJ7zOSp7FHiyIAb2khowY=\");\n\n_c = FormModal;\nexport default FormModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormModal\");","map":{"version":3,"sources":["C:/Users/chris/Desktop/MEGA Drive/Uni/Third Year/COS301/Capstone/Code/Github/Audio-Suite/frontend/src/components/FormModal.js"],"names":["React","useState","Modal","Button","Form","FormModal","show","onHide","type","jwt","currentOfficeInviteCode","setResponseModalShow","setResponseModalTitle","setResponseModalMessage","updateUserOfficeList","newOfficeName","setNewOfficeName","newOfficeInvite","setNewOfficeInvite","newSendOfficeInvite","setNewSendOfficeInvite","newSendOfficeInviteName","setNewSendOfficeInviteName","ResponseError","setResponseError","createOffice","createOffice_requestOptions","method","headers","body","JSON","stringify","name","fetch","then","res","json","result","Response","joinOffice","joinOffice_requestOptions","invite","status","console","log","sendInvite","sendInvite_requestOptions","emailAddress","inviteCode","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nconst FormModal = ({show, onHide, type, jwt, currentOfficeInviteCode, setResponseModalShow, setResponseModalTitle, setResponseModalMessage, updateUserOfficeList}) => {\r\n    const [newOfficeName, setNewOfficeName] = useState('');\r\n    const [newOfficeInvite, setNewOfficeInvite] = useState('');\r\n    const [newSendOfficeInvite, setNewSendOfficeInvite] = useState('');\r\n    const [newSendOfficeInviteName, setNewSendOfficeInviteName] = useState('');\r\n\r\n    const [ResponseError, setResponseError] = useState('');\r\n\r\n    const createOffice = async () => {\r\n        if(newOfficeName !== ''){\r\n            const createOffice_requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({name: newOfficeName, jwt: jwt})\r\n            };\r\n\r\n            fetch(\"http://localhost:3001/api/office/register\", createOffice_requestOptions)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if(result.Response === 'Success')\r\n                    {\r\n                        onHide();\r\n                        updateUserOfficeList();\r\n                        setResponseModalShow(true);\r\n                        setResponseModalTitle(\"Success\");\r\n                        setResponseModalMessage(\"New office \" + newOfficeName + \" sucessfully registered.\");\r\n                        setNewOfficeName('');\r\n                    }\r\n                    else\r\n                    {\r\n                        setResponseError(\"An office with that name already exists, Please choose a new name.\");\r\n                        setNewOfficeName('');\r\n                    }\r\n                    //console.log(\"User registered successfully.\");\r\n                }\r\n            )\r\n        }\r\n        else{\r\n            setResponseError(\"Office name is required, Please don't leave in blank.\");\r\n        }\r\n    }\r\n\r\n    const joinOffice = async () => {\r\n        if(newOfficeInvite !== ''){\r\n            const joinOffice_requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({invite: newOfficeInvite, jwt: jwt})\r\n            };\r\n\r\n            fetch(\"http://localhost:3001/api/office/joinInvite\", joinOffice_requestOptions)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if(result.status === 'Success')\r\n                    {\r\n                        onHide();\r\n                        setResponseModalShow(true);\r\n                        setResponseModalTitle(\"Success\");\r\n                        setResponseModalMessage(\"You have successfully joined the office.\");\r\n                        setNewOfficeName('');\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(result);\r\n                        setResponseError(\"You are already in the office the invite link corresponds to.\");\r\n                        setNewOfficeName('');\r\n                    }\r\n                    //console.log(\"User registered successfully.\");\r\n                }\r\n            )\r\n        }\r\n        else{\r\n            setResponseError(\"Office invite code is required, Please don't leave it blank.\");\r\n        }\r\n    }\r\n\r\n    const sendInvite = async () => {\r\n        if(newSendOfficeInvite !== '' && newSendOfficeInviteName !== ''){\r\n            const sendInvite_requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({emailAddress: newSendOfficeInvite, name: newSendOfficeInviteName, inviteCode: currentOfficeInviteCode})\r\n            };\r\n\r\n            fetch(\"http://localhost:3001/api/notifications/sendInviteCode\", sendInvite_requestOptions)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    if(result.Response === 'Success')\r\n                    {\r\n                        onHide();\r\n                        setResponseModalShow(true);\r\n                        setResponseModalTitle(\"Success\");\r\n                        setResponseModalMessage(\"You have successfully sent the invite code.\");\r\n                        setNewSendOfficeInvite('');\r\n                        setNewSendOfficeInviteName('');\r\n                    }\r\n                    else\r\n                    {\r\n                        setResponseError(\"Invite code could not be sent, Please try again.\");\r\n                        setNewSendOfficeInvite('');\r\n                        setNewSendOfficeInviteName('');\r\n                    }\r\n                    //console.log(\"User registered successfully.\");\r\n                }\r\n            )\r\n        }\r\n        else{\r\n            setResponseError(\"The name and email of the person to send to is required, Please don't leave them blank.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={show}\r\n                onHide={onHide}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {\r\n                        type === 'createOffice'\r\n                        &&\r\n                        'Create a new office'\r\n                    }\r\n                    {\r\n                        type === 'joinOffice'\r\n                        &&\r\n                        'Join a new office'\r\n                    }\r\n                    {\r\n                        type === 'sendInvite'\r\n                        &&\r\n                        'Send Office invite'\r\n                    }\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                {\r\n                    type === 'createOffice'\r\n                    &&\r\n                    <>  \r\n                        {ResponseError !== '' && <p>{ResponseError}</p>}\r\n                        <Form.Group controlId=\"formBasicOfficeName\">\r\n                                <Form.Label>Office Name</Form.Label>\r\n                                <Form.Control \r\n                                type=\"text\" \r\n                                placeholder=\"Office Name\" \r\n                                value={newOfficeName}\r\n                                onChange={(event) => setNewOfficeName(event.target.value)}/>\r\n                        </Form.Group>\r\n                    </>\r\n                }\r\n                {\r\n                    type === 'joinOffice'\r\n                    &&\r\n                    <>\r\n                        {ResponseError !== '' && <p>{ResponseError}</p>}\r\n                        <Form.Group controlId=\"formBasicOfficeInvite\">\r\n                                <Form.Label>Office Invite</Form.Label>\r\n                                <Form.Control \r\n                                type=\"text\" \r\n                                placeholder=\"OfficeInvite\" \r\n                                value={newOfficeInvite}\r\n                                onChange={(event) => setNewOfficeInvite(event.target.value)}/>\r\n                        </Form.Group>\r\n                    </>\r\n                }\r\n                {\r\n                    type === 'sendInvite'\r\n                    &&\r\n                    <>\r\n                        {ResponseError !== '' && <p>{ResponseError}</p>}\r\n                        <Form.Group controlId=\"formBasicName\">\r\n                                <Form.Label>Name of person the invite should be sent to</Form.Label>\r\n                                <Form.Control \r\n                                type=\"text\" \r\n                                placeholder=\"Name\" \r\n                                value={newSendOfficeInviteName}\r\n                                onChange={(event) => setNewSendOfficeInviteName(event.target.value)}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicSendInvite\">\r\n                                <Form.Label>Email of person the invite should be sent to</Form.Label>\r\n                                <Form.Control \r\n                                type=\"email\" \r\n                                placeholder=\"Email\" \r\n                                value={newSendOfficeInvite}\r\n                                onChange={(event) => setNewSendOfficeInvite(event.target.value)}/>\r\n                        </Form.Group>\r\n                    </>\r\n                }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                {\r\n                    type === 'createOffice'\r\n                    &&\r\n                    <Button onClick={async () => createOffice()}>\r\n                        Create\r\n                    </Button>\r\n                }\r\n                {\r\n                    type === 'joinOffice'\r\n                    &&\r\n                    <Button onClick={async () => joinOffice()}>\r\n                        Join\r\n                    </Button>\r\n                }\r\n                {\r\n                    type === 'sendInvite'\r\n                    &&\r\n                    <Button onClick={async () => sendInvite()}>\r\n                        Send\r\n                    </Button>\r\n                }\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormModal\r\n"]},"metadata":{},"sourceType":"module"}